---
# Install Flannel.
- name: clone multus git repo
  git:
    repo: https://github.com/intel/multus-cni.git
    dest: $HOME/multus-cni

- name: apply multus flannel daemonset
  shell: cat $HOME/multus-cni/images/{multus-daemonset.yml,flannel-daemonset.yml} | kubectl apply -f -

- name: apply multus flannel crio daemonset
  shell: cat $HOME/multus-cni/images/{multus-crio-daemonset.yml,flannel-daemonset.yml} | kubectl apply -f -

- name: make multus binary
  make:
    chdir: $HOME/multus-cni

- name: copy the binary to /opt/cni/bin
  copy:
    src: $HOME/multus-cni/bin/multus
    dest: /opt/cni/bin/multus
    remote_src: yes


#- name: Force to use github-release when packages are not available
#  set_fact:
#    flannel_source_type: "github-release"
#  when: is_coreos or ansible_distribution == "Ubuntu"

#- name: Install Flannel with package manager
#  action: "{{ ansible_pkg_mgr }}"
#  args:
#        name: flannel
#        state: latest
#  when: not is_atomic and flannel_source_type != "github-release"

#- name: Install flannel system container
#  include: system_container.yml
#  when: kube_use_flannel_system_container

#- set_fact:
#    flannel_use_upstart: false

#- set_fact:
#    flannel_use_upstart: true
#  when:  "{{ ansible_distribution == 'Ubuntu' and ansible_distribution_major_version|int < 15 }}"

#- name: Install Flannel with github release
#  include: github-release.yml
#  when: flannel_source_type == "github-release"

#- name: Set Flannel config file directory
#  set_fact:
#    flannel_config_dir: "/etc/sysconfig"

#- name: Override Flannel config file directory for Ubuntu
#  set_fact:
#    flannel_config_dir: "/etc/flannel"
#  when: flannel_use_upstart

#- name: Create config file directory
#  file: path={{ flannel_config_dir }} state=directory

#- name: Install Flannel config file
#  template: src=flanneld.j2 dest={{ flannel_config_dir }}/flanneld
#  notify:
#    - restart flannel

#- include: etcd-certs.yml
#  when: flannel_etcd_use_certs
